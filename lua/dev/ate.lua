local crc16 = require "lib.crc16"

local _M = {
    dev = {
        address = 0x0f,
        start_reg = 0x00,
        max_len = 22,
        read_key_fun = 0x03,
        write_key_fun = 0x06
    }
}

_M.register = function( params )
    local address = tonumber(params['address'])
    local start_reg = tonumber(params['start_reg'])
    if address > 0xff then return false, 'address not belong(0x00-0xff)' end
    _M['dev']['address'] = address
    _M['dev']['start_reg'] = start_reg
    return true, ''
end


-- command: 0F0300000016C52A
-- 0xf 
-- 0x3 
-- 0x2c 
-- 0x0 0xa version
-- 0x0 0xf address
-- 0x0 0x0 pm2
-- 0x0 0x0 eco2
-- 0x0 0x0 tvoc
-- 0x0 0x0 temp
-- 0x0 0x0 humis
-- 0x0 0x0 wofo
-- 0x0 0x1 wifi
-- 0x0 0x8 pm2.5
-- 0x2 0x79 eco2
-- 0x0 0x2 tvoc
-- 0x0 0xe9 temp
-- 0x0 0x1e shidu
-- 0x0 0xa  temp regulate
-- 0x0 0xa  sidu reguate 
-- 0x0 0x0   wifi
-- 0x0 0x1e wifi
-- 0x0 0x2   led close
-- 0x0 0x1   pm2.5 always working
-- 0x0 0x5   pm2.5 minutes
-- 0x0 0xf   LED 设置
-- 0x9a 0x1c CRC-16

-- 0x47 ,0x45 ,0x54 ,0x20 ,0x2f ,0x31 ,0x2e ,0x70 ,0x68 ,0x70 ,0x3f ,0xe3 ,0x8e ,0x38 ,0x0 ,0x1 ,0x33 ,0xcc ,0x20 ,0x48 ,0x54 ,0x54 ,0x50 ,0x2f ,0x31 ,0x2e ,0x31 ,0xd ,0xa ,0x55 ,0x73 ,0x65 ,0x72 ,0x5f ,0x41 ,0x67 ,0x65 ,0x6e ,0x74 ,0x3a ,0x20 ,0x4d ,0x6f ,0x7a ,0x69 ,0x6c ,0x6c ,0x61 ,0x2f ,0x34 ,0x2e ,0x30 ,0xd ,0xa ,0x48 ,0x6f ,0x73 ,0x74 ,0x3a ,0x20 ,0x31 ,0x39 ,0x32 ,0x2e ,0x31 ,0x36 ,0x38 ,0x2e ,0x30 ,0x2e ,0x31 ,0x30 ,0x30 ,0x3a ,0x38 ,0x30 ,0x39 ,0x30 ,0xd ,0xa ,0xd ,0xa
_M.read_all = function( sock )
    local dev = _M['dev']
    if dev['address'] == 0xff then
        return false, 'dev is not registered'
    end
    local send_data = { dev['address'], dev['read_key_fun'], 0x00, dev['start_reg'], 0x00,dev['max_len']}
    local crc_list = crc16(send_data)
    table.insert(send_data, crc_list[1])
    table.insert(send_data, crc_list[2])

    if sock then
        sock:send(send_data)
    end

    return send_data
end


return _M